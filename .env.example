# ===== REQUIRED VARIABLES =====

# Instagram Configuration (REQUIRED)
IG_TOKEN=your_instagram_page_access_token_here
IG_USER_ID=your_instagram_business_account_id
VERIFY_TOKEN=your_webhook_verification_token

# WhatsApp Business API Configuration (OPTIONAL - for multi-channel support)
WA_ACCESS_TOKEN=your_whatsapp_access_token_here
WA_PHONE_NUMBER_ID=your_whatsapp_phone_number_id
WA_BUSINESS_ACCOUNT_ID=your_whatsapp_business_account_id
WA_VERIFY_TOKEN=your_whatsapp_webhook_verification_token

# Meta App Configuration (not currently used in production)

# Gemini AI Configuration (REQUIRED)
GOOGLE_API_KEY=your_google_gemini_api_key

# Database Configuration (REQUIRED)
DATABASE_URL=sqlite+aiosqlite:///test.db
REDIS_URL=redis://localhost:6379/0

# ===== RECOMMENDED VARIABLES =====

# Security & Encryption (auto-generated if not set)
SECRET_KEY=your_secret_key_for_app_security
# PATIENT_DATA_ENCRYPTION_KEY=# Auto-generated if not set (use Fernet.generate_key())
# BOOKING_ENCRYPTION_KEY=# Auto-generated if not set (use Fernet.generate_key())

# Google Sheets Integration (for CRM and lead tracking)
GOOGLE_SHEETS_CREDENTIALS=config/credentials/credentials.json
LEAD_TRACKING_SPREADSHEET_ID=your_google_sheets_id_for_lead_tracking

# ===== OPTIONAL VARIABLES =====

# Model Configuration (defaults shown)
GEMINI_MODEL_PRO=gemini-2.5-pro
GEMINI_MODEL_FLASH=gemini-2.5-flash

# State Persistence Configuration
STATE_KEY_PREFIX=conversation_state
STATE_PERSISTENCE_TTL=86400  # 24 hours in seconds

# Application Configuration
DEBUG=false
LOG_LEVEL=INFO

# Development Settings
ALLOW_BUSINESS_ACCOUNT_REPLIES=true  # Enable for testing only

# ===== PAYMENT INTEGRATION =====

# Razorpay Payment Gateway (IMPLEMENTED with Anti-Fraud Protection)
# Get these from Razorpay Dashboard after KYC approval
# Test Mode: Use rzp_test_ keys | Live Mode: Use rzp_live_ keys
RAZORPAY_KEY_ID=rzp_test_your_test_key_id_here
RAZORPAY_KEY_SECRET=your_razorpay_test_secret_key_here
RAZORPAY_WEBHOOK_SECRET=your_webhook_secret_for_signature_verification

# Base URL for webhook callbacks and payment links
# UPDATE this with your actual domain (ngrok for development)
BASE_URL=https://your-domain.com

# Payment Configuration
RAZORPAY_TEST_MODE=true  # Set to false for production

# ===== MOCK PAYMENT SYSTEM =====
# When Razorpay credentials are not set, system automatically uses mock payments
# Mock system uses BASE_URL for payment pages (perfect for testing)
# No additional configuration needed - works out of the box!

# ===== ADDITIONAL PAYMENT SETTINGS =====
# Payment link expiry (in hours)
PAYMENT_LINK_EXPIRY_HOURS=24

# Mock payment system settings
MOCK_PAYMENT_SUCCESS_DELAY=2  # Seconds to simulate payment processing

# Webhook timeout (in seconds)  
WEBHOOK_TIMEOUT=20

# ===== SETUP INSTRUCTIONS =====
# 
# 1. IMMEDIATE TESTING (Mock Payments):
#    - Set BASE_URL to your ngrok URL (e.g., https://abc123.ngrok-free.app)
#    - Leave Razorpay credentials commented out
#    - System will use beautiful mock payment pages
#    - Perfect for testing complete booking flow
#
# 2. RAZORPAY PRODUCTION SETUP:
#    - Complete Razorpay KYC verification
#    - Get API keys from Razorpay Dashboard
#    - Uncomment and fill Razorpay credentials above
#    - Set BASE_URL to your production domain
#    - System automatically switches to real payments
#
# 3. ANTI-FRAUD PROTECTION:
#    - ✅ Prevents fake payment claims
#    - ✅ Real-time payment verification  
#    - ✅ Webhook signature verification
#    - ✅ Customer-order validation
#    - ✅ Comprehensive fraud logging
#
# 4. NGROK SETUP FOR DEVELOPMENT:
#    - Install: npm install -g ngrok
#    - Run: ngrok http 8000
#    - Copy URL and update BASE_URL above
#    - Configure Instagram webhook with ngrok URL