{
  "dependency_chain_analysis": {
    "critical_preservation_chains": {
      "langgraph_workflow": {
        "root": "agents/core/property_tax_assistant_v3.py",
        "dependencies": [
          "agents/simplified/enhanced_workflow_tools.py",
          "agents/simplified/property_document_tools.py",
          "agents/simplified/booking_tools.py",
          "agents/simplified/database_booking_tools.py",
          "agents/simplified/ticket_tools.py"
        ],
        "risk_level": "CRITICAL",
        "preserve": true
      },
      "whatsapp_business_api": {
        "root": "src/api/whatsapp_webhooks.py",
        "dependencies": [
          "services/messaging/modern_integrated_webhook_handler.py",
          "services/communication/message_handler.py",
          "services/persistence/database.py"
        ],
        "risk_level": "CRITICAL",
        "preserve": true
      },
      "property_tax_tools": {
        "tools": [
          "property_tax_assessment_lookup_tool",
          "property_tax_payment_tool",
          "property_tax_exemption_application_tool",
          "property_tax_appeal_tool",
          "property_tax_calculation_tool",
          "property_owner_verification_tool"
        ],
        "locations": [
          "agents/simplified/enhanced_workflow_tools.py"
        ],
        "risk_level": "CRITICAL",
        "preserve": true
      },
      "database_persistence": {
        "core_modules": [
          "services/persistence/database.py",
          "services/persistence/repositories.py",
          "services/persistence/order_storage.py"
        ],
        "redis_integration": [
          "services/utils/redis_client.py"
        ],
        "risk_level": "CRITICAL",
        "preserve": true
      }
    },
    "safe_removal_chains": {
      "image_analysis_services": {
        "target_files": [
          "services/image_analysis/__init__.py"
        ],
        "broken_imports": [
          {
            "file": "agents/simplified/property_document_tools.py",
            "line": 15,
            "import": "from services.image_analysis.property_document_parser import get_property_document_parser",
            "status": "MODULE_NOT_FOUND"
          }
        ],
        "dependents": [],
        "risk_level": "SAFE",
        "removal_action": "DELETE_DIRECTORY_AND_FIX_IMPORTS"
      },
      "unused_packages": {
        "safe_to_remove": [
          "requests",
          "cryptography",
          "alembic",
          "asyncpg",
          "aiosqlite",
          "mcp",
          "python-jose",
          "passlib",
          "python-multipart",
          "prometheus-client",
          "langfuse",
          "pytest-mock",
          "pytest-cov",
          "black",
          "isort",
          "flake8",
          "mypy"
        ],
        "verification_required": [
          "razorpay"
        ],
        "risk_level": "SAFE",
        "removal_action": "UPDATE_REQUIREMENTS_TXT"
      }
    },
    "conditional_removal_chains": {
      "voice_services": {
        "target_files": [
          "services/voice/voice_setup.py",
          "services/voice/livekit_data_bridge.py",
          "services/voice/voice_chat_state.py",
          "services/voice/property_tax_voice_agent.py",
          "services/voice/voice_config.py"
        ],
        "current_usage": [
          {
            "file": "src/api/whatsapp_webhooks.py",
            "context": "medical_prescription_workflow",
            "property_tax_relevance": false
          }
        ],
        "risk_level": "MEDIUM",
        "removal_condition": "IF medical workflows are being removed",
        "removal_action": "DELETE_DIRECTORY_AND_UPDATE_WEBHOOKS"
      },
      "medical_remnants": {
        "affected_files": [
          "src/api/whatsapp_webhooks.py",
          "services/voice/property_tax_voice_agent.py",
          "services/ticket_management/ticket_service.py",
          "services/messaging/modern_integrated_webhook_handler.py",
          "services/persistence/database.py"
        ],
        "medical_keywords_found": [
          "medical", "doctor", "patient", "diagnosis", "krishna",
          "diagnostic", "prescription", "medicine", "health"
        ],
        "risk_level": "MEDIUM",
        "removal_action": "SURGICAL_CODE_CLEANUP"
      }
    },
    "instagram_meta_integration": {
      "extensive_usage": {
        "total_files": 33,
        "total_references": 237,
        "core_integration_files": [
          "src/api/whatsapp_webhooks.py",
          "services/messaging/modern_integrated_webhook_handler.py",
          "services/communication/message_handler.py",
          "src/api/business_webhooks.py"
        ],
        "business_justification": "WhatsApp Business API is a Meta/Instagram product",
        "risk_level": "CRITICAL",
        "preserve": true,
        "removal_action": "DO_NOT_REMOVE"
      }
    }
  },
  "removal_sequence_plan": {
    "phase_1_safe_immediate": {
      "order": 1,
      "actions": [
        {
          "action": "DELETE_DIRECTORY",
          "target": "services/image_analysis/",
          "reason": "Empty directory with broken imports"
        },
        {
          "action": "FIX_IMPORT",
          "target": "agents/simplified/property_document_tools.py",
          "change": "Remove or comment out broken import on line 15"
        },
        {
          "action": "UPDATE_REQUIREMENTS",
          "target": "requirements.txt",
          "remove_packages": [
            "black", "isort", "flake8", "mypy", "pytest-mock", "pytest-cov"
          ]
        }
      ],
      "risk_level": "MINIMAL",
      "estimated_time": "30 minutes"
    },
    "phase_2_conditional_voice": {
      "order": 2,
      "prerequisite": "Confirm property tax workflows don't use voice",
      "actions": [
        {
          "action": "REMOVE_VOICE_IMPORTS",
          "target": "src/api/whatsapp_webhooks.py",
          "lines": [204, 256, 462]
        },
        {
          "action": "DELETE_DIRECTORY",
          "target": "services/voice/"
        }
      ],
      "risk_level": "MEDIUM",
      "testing_required": "Full WhatsApp webhook testing",
      "estimated_time": "2 hours"
    },
    "phase_3_medical_cleanup": {
      "order": 3,
      "actions": [
        {
          "action": "SURGICAL_REMOVAL",
          "strategy": "Replace medical terms in comments and variable names",
          "preserve_functionality": true
        }
      ],
      "risk_level": "HIGH",
      "manual_review_required": true,
      "estimated_time": "4-6 hours"
    },
    "phase_4_package_optimization": {
      "order": 4,
      "actions": [
        {
          "action": "VERIFY_INDIRECT_DEPENDENCIES",
          "packages": ["requests", "cryptography", "alembic"]
        },
        {
          "action": "REMOVE_CONFIRMED_UNUSED",
          "target": "requirements.txt"
        }
      ],
      "risk_level": "LOW",
      "estimated_time": "1 hour"
    }
  },
  "rollback_procedures": {
    "git_strategy": {
      "branch_naming": "cleanup/remove-{component}-{date}",
      "commit_frequency": "After each file deletion",
      "merge_strategy": "Squash and merge after validation"
    },
    "testing_checkpoints": [
      "After phase 1: Run import tests",
      "After phase 2: Test WhatsApp webhooks",
      "After phase 3: Full integration test",
      "After phase 4: Production deployment test"
    ],
    "emergency_rollback": {
      "git_reset": "git reset --hard HEAD~N",
      "package_restore": "pip install -r requirements.txt.backup",
      "service_restart": "Restart all containers"
    }
  },
  "validation_checklist": {
    "pre_removal": [
      "Create backup branch",
      "Run full test suite",
      "Document current functionality"
    ],
    "post_removal": [
      "Verify no broken imports",
      "Test core property tax workflows",
      "Validate WhatsApp integration",
      "Check error logs for missing dependencies"
    ],
    "production_readiness": [
      "Performance impact assessment",
      "Security review of remaining code",
      "Documentation updates",
      "Monitoring alerts validation"
    ]
  }
}